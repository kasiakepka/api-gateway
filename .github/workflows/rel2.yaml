name: Release Api Gateway - Step 2

permissions:
  id-token: write # This is required by image-builder
  contents: write # Read is required by image-builder, write is required to push artifact

on:
  push:
    branches:
      - 'release-**'
    paths:
      - 'sec-scanners-config.yaml'

jobs:   
  check-prerequisites: 
    name: check-prerequisites
    runs-on: ubuntu-latest
    outputs:
      current_release: ${{ steps.set-release.outputs.current_release }}
      latest_before: ${{ steps.get-latest.outputs.latest_before }}
      is_patch: ${{ steps.check_patch.outputs.is_patch }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current release from sec-scanners-config.yaml file
        id: set-release
        run: |
          CURRENT=$(grep api-gateway-manager ./sec-scanners-config.yaml | cut -d ":" -f2 | xargs)
          echo "Current release: $CURRENT"
          echo "current_release=$CURRENT" >> $GITHUB_OUTPUT

      - name: Get latest release before releasing
        id: get-latest
        run: |
          LATEST=$(curl -s https://api.github.com/repos/kyma-project/api-gateway/releases/latest | grep '"tag_name"' | cut -d '"' -f 4)
          echo "Latest release before releasing: $LATEST"
          echo "latest_before=$LATEST" >> $GITHUB_OUTPUT

      - name: Determine if this is a patch release
        id: check_patch
        run: |
          if [[ "${{ steps.set-release.outputs.current_release }}" =~ ^[0-9]+\.[0-9]+\.[1-9][0-9]*$ ]]; then
            echo "is_patch=true" >> $GITHUB_OUTPUT
          else
            echo "is_patch=false" >> $GITHUB_OUTPUT
          fi

  create-test:
    name: Test
    runs-on: ubuntu-latest
    needs: check-prerequisites
    steps:
      - name: Test
        run: echo "${{ needs.check-prerequisites.outputs.current_release }}"

  create-draft:
    name: Create draft release
    needs: check-prerequisites
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-draft.outputs.release_id }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Update Dependabot for major/minor releases
        if: ${{ needs.check-prerequisites.outputs.is_patch == 'false' }}
        env:
          GH_TOKEN: ${{ secrets.GOAT_BOT_REPO_ACCESS }}
          CURRENT_RELEASE: ${{ needs.check-prerequisites.outputs.current_release }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b dependabot-config/$CURRENT_RELEASE
          sed -i "s|release\-.*|release\-$CURRENT_RELEASE\"|g" .github/dependabot.yml
          git add .
          if git diff-index --quiet HEAD; then
            echo "Error: No changes detected"
            exit 1
          fi
          git commit -m "update dependabot.yml" -m "Generated by GitHub Actions"
          git push -f -u origin dependabot-config/$CURRENT_RELEASE
          gh pr create --base main --head dependabot-config/$CURRENT_RELEASE --fill || true 

          gh api --method DELETE repos/${{ github.repository }}/git/refs/heads/sec-scanners-config/$CURRENT_RELEASE || echo "Failed to delete branch"
